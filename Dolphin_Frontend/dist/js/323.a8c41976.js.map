{"version":3,"file":"js/323.a8c41976.js","mappings":"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","sources":["webpack://dolphin/./src/components/Common/Superadmin/Notifications.vue","webpack://dolphin/./src/components/Common/Superadmin/NotificationDetail.vue","webpack://dolphin/./src/components/Common/Superadmin/NotificationDetail.vue?fe66","webpack://dolphin/./src/components/Common/Superadmin/Notifications.vue?ff32"],"sourcesContent":["<template>\n  <MainLayout>\n    <Toast />\n    <div class=\"page\">\n      <div class=\"table-outer\">\n        <div class=\"table-card\">\n          <div class=\"table-header-bar\">\n            <button\n              class=\"btn btn-primary\"\n              @click=\"showSendModal = true\"\n            >\n              <img\n                src=\"@/assets/images/SendNotification.svg\"\n                alt=\"Send\"\n                class=\"notifications-add-btn-icon\"\n              />\n              Send Notification\n            </button>\n          </div>\n          <div class=\"table-container\">\n            <table class=\"table\">\n              <TableHeader\n                :columns=\"[\n                  {\n                    label: 'Notification Title',\n                    key: 'body',\n                    minWidth: '225px',\n                    sortable: true,\n                  },\n                  {\n                    label: 'Scheduled Date & Time',\n                    key: 'scheduled_at',\n                    minWidth: '225px',\n                    sortable: true,\n                  },\n\n                  {\n                    label: 'Sent Date & Time',\n                    key: 'sent_at',\n                    minWidth: '225px',\n                    sortable: true,\n                  },\n                  { label: 'Action', key: 'action', minWidth: '200px' },\n                ]\"\n                :activeSortKey=\"sortKey\"\n                :sortAsc=\"sortAsc\"\n                @sort=\"sortBy\"\n              />\n              <tbody>\n                <tr\n                  v-for=\"item in paginatedNotifications\"\n                  :key=\"item.id\"\n                >\n                  <td class=\"notification-body-cell\">\n                    <span\n                      class=\"notification-body-truncate\"\n                      :title=\"item.body\"\n                      style=\"\n                        max-width: 200px;\n                        transition: max-width 0.18s ease, white-space 0.18s ease;\n                        overflow: hidden;\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        display: inline-block;\n                      \"\n                    >\n                      {{ item.body }}\n                    </span>\n                  </td>\n                  <td>{{ formatLocalDateTime(item.scheduled_at) }}</td>\n                  <td>\n                    {{ item.sent_at ? formatLocalDateTime(item.sent_at) : '-' }}\n                  </td>\n                  <td>\n                    <button\n                      class=\"btn-view\"\n                      @click=\"openDetail(item)\"\n                    >\n                      <img\n                        src=\"@/assets/images/Detail.svg\"\n                        alt=\"View\"\n                        class=\"btn-view-icon\"\n                      />\n                      View Detail\n                    </button>\n                  </td>\n                </tr>\n                <tr v-if=\"paginatedNotifications.length === 0\">\n                  <td\n                    colspan=\"4\"\n                    class=\"no-data\"\n                  >\n                    No notifications found.\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n    <Pagination\n      :pageSize=\"pageSize\"\n      :pageSizes=\"[10, 25, 100]\"\n      :showPageDropdown=\"showPageDropdown\"\n      :currentPage=\"currentPage\"\n      :totalPages=\"totalPages\"\n      :paginationPages=\"paginationPages\"\n      @goToPage=\"goToPage\"\n      @selectPageSize=\"selectPageSize\"\n      @togglePageDropdown=\"showPageDropdown = !showPageDropdown\"\n    />\n    <div\n      v-if=\"showSendModal\"\n      class=\"modal-overlay\"\n      @click.self=\"showSendModal = false\"\n    >\n      <div class=\"modal-card\">\n        <button\n          class=\"modal-close-btn\"\n          @click=\"showSendModal = false\"\n        >\n          &times;\n        </button>\n        <div class=\"modal-title\">Send Notifications</div>\n        <div class=\"modal-desc\">\n          Send a notification to selected organizations, admins, or groups. You\n          can also schedule it for later.\n        </div>\n        <textarea\n          class=\"modal-textarea\"\n          placeholder=\"Type your notification here...\"\n        ></textarea>\n        <div class=\"modal-row\">\n          <div class=\"modal-field\">\n            <FormLabel>Select Organizations</FormLabel>\n            <MultiSelectDropdown\n              :options=\"organizations || []\"\n              :selectedItems=\"selectedOrganizations\"\n              @update:selectedItems=\"selectedOrganizations = $event\"\n              option-label=\"organization_name\"\n              option-value=\"id\"\n              placeholder=\"Select organizations\"\n              :enableSelectAll=\"true\"\n            />\n          </div>\n          <div class=\"modal-field\">\n            <FormLabel>Select Group</FormLabel>\n            <MultiSelectDropdown\n              :options=\"groups || []\"\n              :selectedItems=\"selectedGroups\"\n              @update:selectedItems=\"selectedGroups = $event\"\n              placeholder=\"Select groups\"\n              :enableSelectAll=\"true\"\n            />\n          </div>\n        </div>\n        <div class=\"modal-row\">\n          <div class=\"modal-field\">\n            <FormLabel>Select Admin</FormLabel>\n            <MultiSelectDropdown\n              :options=\"admins || []\"\n              :selectedItems=\"selectedAdmins\"\n              @update:selectedItems=\"selectedAdmins = $event\"\n              option-label=\"name\"\n              option-value=\"id\"\n              placeholder=\"Select admins\"\n              :enableSelectAll=\"true\"\n            />\n          </div>\n          <div class=\"modal-field\"></div>\n        </div>\n        <div class=\"modal-row\">\n          <div class=\"schedule-demo-field schedule-demo-schedule-field\">\n            <FormLabel>Schedule</FormLabel>\n            <div class=\"modal-row\">\n              <div class=\"modal-field\">\n                <div class=\"form-box\">\n                  <FormInput\n                    v-model=\"scheduledDate\"\n                    type=\"date\"\n                    placeholder=\"MM/DD/YYYY\"\n                  />\n                </div>\n              </div>\n\n              <div class=\"modal-field\">\n                <div class=\"form-box\">\n                  <FormInput\n                    v-model=\"scheduledTime\"\n                    type=\"time\"\n                    placeholder=\"00:00\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <button\n          class=\"btn btn-primary\"\n          @click=\"sendNotification\"\n        >\n          Send Notification\n        </button>\n      </div>\n    </div>\n\n    <!-- Notification Detail Modal -->\n    <NotificationDetail\n      :visible=\"showDetailModal\"\n      :announcement=\"detailData && detailData.announcement\"\n      :groups=\"detailData && detailData.groups\"\n      :organizations=\"detailData && detailData.organizations\"\n      :notifications=\"detailData && detailData.notifications\"\n      @close=\"closeDetail\"\n    />\n  </MainLayout>\n</template>\n\n<script>\nimport MainLayout from '../../layout/MainLayout.vue';\nimport axios from 'axios';\nimport storage from '@/services/storage';\nimport Pagination from '../../layout/Pagination.vue';\nimport TableHeader from '@/components/Common/Common_UI/TableHeader.vue';\nimport NotificationDetail from './NotificationDetail.vue';\nimport {\n  FormDropdown,\n  FormRow,\n  FormLabel,\n  FormDateTime,\n} from '@/components/Common/Common_UI/Form';\nimport FormInput from '../Common_UI/Form/FormInput.vue';\nimport MultiSelectDropdown from '../Common_UI/Form/MultiSelectDropdown.vue';\nimport Toast from 'primevue/toast';\n\nexport default {\n  name: 'Notifications',\n  components: {\n    MainLayout,\n    Pagination,\n    TableHeader,\n    NotificationDetail,\n    FormDropdown,\n    FormRow,\n    FormInput,\n    FormLabel,\n    FormDateTime,\n    MultiSelectDropdown,\n    Toast,\n  },\n\n  data() {\n    return {\n      // lifecycle guard to prevent state updates after unmount\n      isAlive: false,\n      showPageDropdown: false,\n      showSendModal: false,\n      showDetailModal: false,\n      selectedNotification: null,\n      pageSize: 10,\n      currentPage: 1,\n      sortKey: '',\n      sortAsc: true,\n      selectedOrganizations: [],\n      selectedAdmin: '',\n      selectedAdmins: [],\n      selectedGroups: [],\n      scheduledDate: '',\n      scheduledTime: '',\n      organizations: [],\n      groups: [],\n      admins: [],\n      notifications: [],\n      announcements: [],\n      // local component state\n      detailData: null,\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.notifications.length / this.pageSize) || 1;\n    },\n    paginatedNotifications() {\n      let notifications = [...this.notifications];\n      if (this.sortKey) {\n        notifications.sort((a, b) => {\n          const aVal = a[this.sortKey] || '';\n          const bVal = b[this.sortKey] || '';\n          if (aVal < bVal) return this.sortAsc ? -1 : 1;\n          if (aVal > bVal) return this.sortAsc ? 1 : -1;\n          return 0;\n        });\n      }\n      const start = (this.currentPage - 1) * this.pageSize;\n      return notifications.slice(start, start + this.pageSize);\n    },\n    paginationPages() {\n      const total = this.totalPages;\n      if (total <= 7) {\n        return Array.from({ length: total }, (_, i) => i + 1);\n      } else {\n        const pages = [1];\n        if (this.currentPage > 4) pages.push('...');\n        for (\n          let i = Math.max(2, this.currentPage - 1);\n          i <= Math.min(total - 1, this.currentPage + 1);\n          i++\n        ) {\n          pages.push(i);\n        }\n        if (this.currentPage < total - 3) pages.push('...');\n        pages.push(total);\n        return pages;\n      }\n    },\n  },\n  methods: {\n    async openDetail(item) {\n      if (!item || !item.id) {\n        console.error('Invalid item for detail view:', item);\n        this.$toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Cannot load details for invalid item.',\n          life: 3000,\n        });\n        return;\n      }\n      try {\n        const authToken = storage.get('authToken');\n        const res = await axios.get(\n          `${\n            process.env.VUE_APP_API_BASE_URL || 'http://127.0.0.1:8000'\n          }/api/announcements/${item.id}`,\n          { headers: { Authorization: `Bearer ${authToken}` } }\n        );\n        if (res.data) {\n          this.detailData = res.data;\n          this.selectedNotification = res.data.announcement;\n          this.showDetailModal = true;\n        }\n      } catch (error) {\n        console.error('Failed to fetch notification details', error);\n        this.$toast.add({\n          severity: 'error',\n          summary: 'Error',\n          detail: 'Failed to fetch notification details. Please try again.',\n          life: 3000,\n        });\n      }\n    },\n    closeDetail() {\n      this.showDetailModal = false;\n      this.selectedNotification = null;\n      this.detailData = null;\n    },\n    goToPage(page) {\n      if (page === '...' || page < 1 || page > this.totalPages) return;\n      this.currentPage = page;\n    },\n    selectPageSize(size) {\n      this.pageSize = size;\n      this.currentPage = 1;\n      this.showPageDropdown = false;\n    },\n    sortBy(key) {\n      if (this.sortKey === key) {\n        this.sortAsc = !this.sortAsc;\n      } else {\n        this.sortKey = key;\n        this.sortAsc = true;\n      }\n    },\n    formatLocalDateTime(dateStr) {\n      if (!dateStr) return '';\n      // If ISO with timezone or 'Z', let Date parse it\n      let d = null;\n      try {\n        if (/T.*Z$/.test(dateStr) || /T.*[+-]\\d{2}:?\\d{2}$/.test(dateStr)) {\n          d = new Date(dateStr);\n        } else {\n          // Try to parse 'YYYY-MM-DD HH:MM:SS' (assume it's UTC from DB)\n          const m = (dateStr || '').match(\n            /^(\\d{4})-(\\d{2})-(\\d{2})[ T](\\d{2}):(\\d{2})(?::(\\d{2}))?$/\n          );\n          if (m) {\n            const year = parseInt(m[1], 10);\n            const month = parseInt(m[2], 10) - 1;\n            const day = parseInt(m[3], 10);\n            const hour = parseInt(m[4], 10);\n            const minute = parseInt(m[5], 10);\n            const second = parseInt(m[6], 10) || 0;\n            // create Date from UTC components, then use local getters for display\n            const utcMillis = Date.UTC(year, month, day, hour, minute, second);\n            d = new Date(utcMillis);\n          } else {\n            d = new Date(dateStr);\n          }\n        }\n      } catch (e) {\n        console.warn('Date parse error:', e);\n        d = new Date(dateStr);\n      }\n      if (!d || isNaN(d.getTime())) return dateStr || '';\n\n      // Use local date/time getters so the shown value is in user's local timezone\n      const dayOfMonth = String(d.getDate()).padStart(2, '0');\n      const months = [\n        'JAN',\n        'FEB',\n        'MAR',\n        'APR',\n        'MAY',\n        'JUN',\n        'JUL',\n        'AUG',\n        'SEP',\n        'OCT',\n        'NOV',\n        'DEC',\n      ];\n      const mon = months[d.getMonth()];\n      const yr = d.getFullYear();\n\n      let hr = d.getHours();\n      const min = String(d.getMinutes()).padStart(2, '0');\n      const ampm = hr >= 12 ? 'PM' : 'AM';\n      hr = hr % 12;\n\n      const strTime = `${hr}:${min} ${ampm}`;\n      return `${dayOfMonth} ${mon},${yr} ${strTime}`;\n    },\n    async fetchOrganizations() {\n      try {\n        const apiUrl = process.env.VUE_APP_API_URL || '/api';\n        const token = storage.get('authToken');\n        const res = await axios.get(apiUrl + '/organizations', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (this.isAlive) this.organizations = res.data;\n      } catch (err) {\n        console.error('Error fetching organizations:', err);\n        if (this.isAlive) this.organizations = [];\n      }\n    },\n    async fetchGroups() {\n      try {\n        const apiUrl = process.env.VUE_APP_API_URL || '/api';\n        const token = storage.get('authToken');\n        const res = await axios.get(apiUrl + '/groups', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (this.isAlive) this.groups = res.data;\n      } catch (err) {\n        console.error('Error fetching groups:', err);\n        if (this.isAlive) this.groups = [];\n      }\n    },\n    async fetchAdmins() {\n      try {\n        const apiUrl = process.env.VUE_APP_API_URL || '/api';\n        const token = storage.get('authToken');\n        const res = await axios.get(apiUrl + '/users', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (this.isAlive) this.admins = res.data;\n      } catch (err) {\n        console.error('Error fetching admins:', err);\n        if (this.isAlive) this.admins = [];\n      }\n    },\n    async fetchNotifications() {\n      try {\n        const apiUrl = process.env.VUE_APP_API_URL || '/api';\n        const token = storage.get('authToken');\n        const res = await axios.get(apiUrl + '/announcements', {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (this.isAlive) {\n          // API may return { data: [...] } or an array directly\n          if (Array.isArray(res.data)) {\n            this.notifications = res.data;\n          } else if (res.data && Array.isArray(res.data.data)) {\n            this.notifications = res.data.data;\n          } else if (res.data && Array.isArray(res.data.notifications)) {\n            this.notifications = res.data.notifications;\n          } else {\n            this.notifications = [];\n          }\n        }\n      } catch (err) {\n        console.error('Error fetching notifications:', err);\n        if (this.isAlive) this.notifications = [];\n      }\n    },\n    async sendNotification() {\n      try {\n        const apiUrl = process.env.VUE_APP_API_URL || '/api';\n        const token = storage.get('authToken');\n        // Collect data from modal\n        let scheduled_at;\n        if (this.scheduledDate && this.scheduledTime) {\n          let time = this.scheduledTime;\n          if (time.length === 5) time += ':00';\n          const local = new Date(`${this.scheduledDate}T${time}`);\n          const pad = (n) => String(n).padStart(2, '0');\n          const YYYY = local.getUTCFullYear();\n          const MM = pad(local.getUTCMonth() + 1);\n          const DD = pad(local.getUTCDate());\n          const hh = pad(local.getUTCHours());\n          const mm = pad(local.getUTCMinutes());\n          const ss = pad(local.getUTCSeconds());\n          scheduled_at = `${YYYY}-${MM}-${DD} ${hh}:${mm}:${ss}`;\n        }\n        const payload = {\n          organization_ids: this.selectedOrganizations.map((org) => org.id),\n          group_ids: this.selectedGroups.map((group) => group.id),\n          admin_ids: this.selectedAdmins.map((admin) => admin.id),\n          body: this.$el.querySelector('.modal-textarea')\n            ? this.$el.querySelector('.modal-textarea').value\n            : '',\n        };\n        if (scheduled_at) payload.scheduled_at = scheduled_at;\n        await axios.post(apiUrl + '/notifications/send', payload, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        if (this.isAlive) {\n          this.showSendModal = false;\n          this.resetForm();\n          this.$toast &&\n            this.$toast.add &&\n            this.$toast.add({\n              severity: 'success',\n              summary: 'Success',\n              detail: 'Announcement sent!',\n              life: 3000,\n            });\n        }\n      } catch (err) {\n        console.error('Error sending announcement:', err);\n        if (this.isAlive && this.$toast && this.$toast.add) {\n          this.$toast.add({\n            severity: 'error',\n            summary: 'Error',\n            detail: 'Failed to send announcement',\n            life: 4000,\n          });\n        }\n      }\n    },\n    resetForm() {\n      this.selectedOrganizations = [];\n      this.selectedAdmins = [];\n      this.selectedGroups = [];\n      this.scheduledDate = '';\n      this.scheduledTime = '';\n      // Clear the textarea\n      const textarea = this.$el.querySelector('.modal-textarea');\n      if (textarea) {\n        textarea.value = '';\n      }\n    },\n  },\n  mounted() {\n    this.isAlive = true;\n    this.fetchOrganizations();\n    this.fetchGroups();\n    this.fetchAdmins();\n    this.fetchNotifications();\n  },\n  beforeUnmount() {\n    this.isAlive = false;\n  },\n};\n</script>\n\n<style>\n@import '@/assets/global.css';\n@import '@/assets/modelcssnotificationandassesment.css';\n</style>\n\n<!-- Unified modal styles for consistency across components -->\n<style scoped>\n.modal-overlay {\n  position: fixed;\n  inset: 0;\n  background: rgba(0, 0, 0, 0.13);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n}\n\n.modal-card {\n  background: #fff;\n  border-radius: 22px;\n  box-shadow: 0 4px 32px rgba(33, 150, 243, 0.08);\n  padding: 36px 44px;\n  max-width: 720px;\n  width: 100%;\n  box-sizing: border-box;\n  position: relative;\n}\n\n.modal-close-btn {\n  position: absolute;\n  top: 18px;\n  right: 18px;\n  background: none;\n  border: none;\n  font-size: 28px;\n  color: #888;\n  cursor: pointer;\n  z-index: 10;\n}\n\n.modal-title {\n  font-size: 22px;\n  font-weight: 600;\n  margin-bottom: 12px;\n  color: #222;\n}\n\n.modal-desc {\n  margin-bottom: 12px;\n  color: #000000;\n}\n\n.modal-form {\n  display: flex;\n  flex-direction: column;\n  gap: 14px;\n}\n\n.modal-form-row {\n  display: flex;\n  gap: 12px;\n}\n\n.modal-form-actions {\n  display: flex;\n  justify-content: flex-end;\n}\n\n.modal-save-btn {\n  padding: 10px 28px;\n  border-radius: 20px;\n}\n\n.modal-textarea {\n  width: 100%;\n  min-height: 80px;\n  border-radius: 10px;\n  border: 1.5px solid #e0e0e0;\n  padding: 12px 16px;\n  font-size: 16px;\n  color: #222;\n  margin-bottom: 18px;\n  resize: vertical;\n  background: #fafafa;\n  outline: none;\n  font-family: inherit;\n}\n\n.modal-row {\n  display: flex;\n  gap: 18px;\n  width: 100%;\n  margin-bottom: 18px;\n}\n\n.modal-field {\n  flex: 1 1 0;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.modal-field label {\n  color: #222;\n  font-size: 15px;\n  font-weight: 400;\n  text-align: left;\n}\n\n.modal-field select,\n.modal-date-input,\n.modal-time-input {\n  background: #fff;\n  border: 1.5px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 10px 14px;\n  font-size: 15px;\n  color: #222;\n  outline: none;\n  transition: border 0.2s;\n}\n\n.schedule-demo-field {\n  flex: 1 1 0;\n  min-width: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 6px;\n}\n\n.schedule-demo-field label {\n  color: #222;\n  font-size: 15px;\n  font-weight: 400;\n  text-align: left;\n}\n\n.schedule-demo-field input,\n.schedule-demo-field select {\n  background: #fafafa;\n  border: 1.5px solid #e0e0e0;\n  border-radius: 8px;\n  padding: 10px 14px;\n  font-size: 15px;\n  color: #222;\n  outline: none;\n  transition: border 0.2s;\n}\n\n.no-data {\n  text-align: center;\n  color: #888;\n  font-size: 16px;\n  padding: 32px 0;\n}\n\n.table-container .table {\n  width: 100%;\n  table-layout: fixed;\n}\n\n.notification-body-cell {\n  width: 60%;\n  max-width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n\n.notification-body-truncate {\n  display: inline-block;\n  max-width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  cursor: pointer;\n}\n\n.notifications-add-btn-icon {\n  width: 18px;\n  height: 18px;\n  margin-right: 6px;\n  display: inline-block;\n  vertical-align: middle;\n}\n\n.page {\n  padding: 0 32px 32px 32px;\n  display: flex;\n  background-color: #fff;\n  justify-content: center;\n  box-sizing: border-box;\n}\n\n@media (max-width: 1400px) {\n  .page {\n    padding: 16px;\n  }\n}\n\n@media (max-width: 900px) {\n  .page {\n    padding: 4px;\n  }\n\n  .modal-row {\n    flex-direction: column;\n    gap: 12px;\n  }\n}\n\n@media (max-width: 700px) {\n  .modal-card {\n    min-width: 0;\n    max-width: calc(100vw - 32px);\n    width: calc(98vw - 32px);\n    padding: 20px 16px 20px 16px;\n    border-radius: 14px;\n    margin: 16px;\n  }\n}\n\n@media (max-width: 500px) {\n  .modal-card {\n    min-width: 0;\n    max-width: calc(100vw - 24px);\n    width: calc(98vw - 24px);\n    padding: 18px 12px 18px 12px;\n    border-radius: 12px;\n    margin: 12px;\n  }\n\n  .modal-title {\n    font-size: 20px;\n    margin-bottom: 18px;\n  }\n\n  .modal-form {\n    gap: 10px;\n    padding: 0;\n  }\n\n  .modal-form-row {\n    flex-direction: column;\n    gap: 10px;\n    width: 100%;\n  }\n\n  .modal-save-btn {\n    padding: 8px 18px;\n    font-size: 15px;\n    border-radius: 14px;\n  }\n\n  .modal-close-btn {\n    top: 10px;\n    right: 12px;\n    font-size: 26px;\n  }\n\n  .modal-form-actions {\n    margin-top: 10px;\n  }\n}\n</style>\n","<template>\n  <div\n    v-if=\"visible\"\n    class=\"modal-overlay\"\n    @click.self=\"$emit('close')\"\n  >\n    <div\n      class=\"modal-card\"\n      style=\"max-width: 900px; width: 90%\"\n    >\n      <button\n        class=\"modal-close-btn\"\n        @click=\"$emit('close')\"\n      >\n        &times;\n      </button>\n      <div class=\"modal-title\">Notification Detail</div>\n\n      <div class=\"modal-desc\">\n        Details for the selected notification / announcement.\n      </div>\n\n      <div>\n        <br />\n        <div\n          class=\"modal-title schedule-header\"\n          style=\"font-size: 20px; font-weight: 450\"\n        >\n          <div class=\"schedule-header-left\">\n            <div>\n              <div\n                class=\"schedule-assessment-name\"\n                style=\"\n                  display: inline-block;\n                  vertical-align: middle;\n                  max-width: 520px;\n                  margin-right: 12px;\n                \"\n              >\n                {{ announcementBodyShort }}\n              </div>\n              -\n              <div\n                class=\"schedule-assessment-name\"\n                style=\"\n                  display: inline-block;\n                  vertical-align: middle;\n                  margin-left: 12px;\n                \"\n              >\n                {{ formatDateTime(announcementScheduledAt) }}\n              </div>\n            </div>\n          </div>\n          <div class=\"schedule-header-right\">\n            <span\n              v-if=\"announcementStatus === 'sent'\"\n              :class=\"[\n                'status-green',\n                { active: announcementStatus === 'sent' },\n              ]\"\n              >Sent</span\n            >\n            <span\n              v-if=\"announcementStatus === 'scheduled'\"\n              :class=\"[\n                'status-yellow',\n                { active: announcementStatus === 'scheduled' },\n              ]\"\n              >Scheduled</span\n            >\n            <span\n              v-if=\"announcementStatus === 'failed'\"\n              :class=\"[\n                'status-red',\n                { active: announcementStatus === 'failed' },\n              ]\"\n              >Failed</span\n            >\n          </div>\n        </div>\n        <div class=\"NotificationDetailBodyForOrganizations\">\n          <div\n            v-if=\"allRecipients.length\"\n            class=\"NotificationDetailBodyForOrganizations\"\n          >\n            <div class=\"modal-titleTABLE\">\n              Organization Notification Details\n            </div>\n            <div class=\"detail-row\">\n              <div\n                class=\"detail-table\"\n                style=\"\n                  width: 100% !important;\n                  max-width: 800px !important;\n                  margin: 0 !important;\n                \"\n              >\n                <div\n                  class=\"recipient-table-wrap\"\n                  style=\"\n                    overflow-x: auto;\n                    -webkit-overflow-scrolling: touch;\n                    width: 100%;\n                  \"\n                >\n                  <table\n                    class=\"recipient-table compact\"\n                    style=\"width: 100%; min-width: 500px\"\n                  >\n                    <TableHeader\n                      :columns=\"[\n                        {\n                          label: 'Organization Name',\n                          key: 'organization_name',\n                          minWidth: '200px',\n                        },\n                        {\n                          label: 'User Name',\n                          key: 'name',\n                          minWidth: '200px',\n                        },\n\n                        {\n                          label: 'Emails',\n                          key: 'email',\n                          minWidth: '200px',\n                        },\n                        { label: 'Read At', key: 'read_at', minWidth: '200px' },\n                      ]\"\n                    />\n                    <tbody>\n                      <tr v-if=\"!allRecipients.length\">\n                        <td\n                          colspan=\"4\"\n                          style=\"text-align: center; padding: 20px\"\n                        >\n                          No recipients found.\n                        </td>\n                      </tr>\n                      <tr\n                        v-for=\"r in allRecipients\"\n                        :key=\"r.id\"\n                      >\n                        <td>{{ r.organization_name }}</td>\n                        <td>{{ r.name }}</td>\n                        <td>{{ r.email }}</td>\n\n                        <td>\n                          <span>{{\n                            r.read_at ? formatDateTime(r.read_at) : ' - '\n                          }}</span>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"NotificationDetailBodyForGroups\">\n          <div\n            v-if=\"groupRows.length\"\n            class=\"NotificationDetailBodyForGroups\"\n          >\n            <div class=\"modal-titleTABLE\">Group Notification Details</div>\n            <div class=\"detail-row\">\n              <div\n                class=\"detail-table\"\n                style=\"\n                  width: 100% !important;\n                  max-width: 800px !important;\n                  margin: 0 !important;\n                \"\n              >\n                <div\n                  class=\"recipient-table-wrap\"\n                  style=\"\n                    overflow-x: auto;\n                    -webkit-overflow-scrolling: touch;\n                    width: 100%;\n                  \"\n                >\n                  <table\n                    class=\"recipient-table compact\"\n                    style=\"width: 100%; min-width: 500px\"\n                  >\n                    <TableHeader\n                      :columns=\"[\n                        {\n                          label: 'Group Name',\n                          key: 'name',\n                          minWidth: '200px',\n                        },\n                        {\n                          label: 'Organization Name',\n                          key: 'organization_name',\n                          minWidth: '200px',\n                        },\n                        {\n                          label: 'Org Contact Email',\n                          key: 'org_contact_email',\n                          minWidth: '200px',\n                        },\n                      ]\"\n                    />\n                    <tbody>\n                      <tr v-if=\"!groupRows.length\">\n                        <td\n                          colspan=\"3\"\n                          style=\"text-align: center; padding: 20px\"\n                        >\n                          No groups targeted.\n                        </td>\n                      </tr>\n                      <tr\n                        v-for=\"g in groupRows\"\n                        :key=\"g.id\"\n                      >\n                        <td>{{ g.name }}</td>\n                        <td>{{ g.organization_name }}</td>\n                        <td>{{ g.org_contact_email }}</td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TableHeader from '@/components/Common/Common_UI/TableHeader.vue';\n\nexport default {\n  name: 'NotificationDetail',\n  components: { TableHeader },\n  props: {\n    visible: { type: Boolean, default: false },\n    announcement: { type: Object, default: null },\n    selectedNotification: { type: Object, default: null },\n    groups: { type: Array, default: () => [] },\n    organizations: { type: Array, default: () => [] },\n    notifications: { type: Array, default: () => [] },\n  },\n  emits: ['close'],\n  data() {\n    return {};\n  },\n  computed: {\n    announcementEffective() {\n      return this.announcement || this.selectedNotification || null;\n    },\n    announcementBodyShort() {\n      const raw =\n        this.announcementEffective && (this.announcementEffective.body || '');\n      return String(raw || '').slice(0, 120);\n    },\n    announcementScheduledAt() {\n      return (\n        (this.announcementEffective &&\n          (this.announcementEffective.scheduled_at ||\n            this.announcementEffective.sent_at)) ||\n        ''\n      );\n    },\n    announcementStatus() {\n      // priority: sent > scheduled > failed\n      const a = this.announcementEffective || {};\n      const hasSent = !!(a.sent_at || a.sent_at === 0);\n      const hasScheduled = !!(a.scheduled_at || a.scheduled_at === 0);\n      if (hasSent) return 'sent';\n      if (hasScheduled) return 'scheduled';\n      return 'failed';\n    },\n    notificationsMap() {\n      const map = new Map();\n      if (!this.notifications) return map;\n      this.notifications.forEach((n) => {\n        // notifiable_id is user id\n        if (n.notifiable_id) {\n          map.set(Number(n.notifiable_id), n);\n        }\n      });\n      return map;\n    },\n    allRecipients() {\n      const orgs = this.organizationRecipients || [];\n      const admins = this.adminRecipients || [];\n\n      const combined = [...orgs];\n      const ids = new Set(orgs.map((o) => Number(o.id)));\n      admins.forEach((a) => {\n        const aid = Number(a.id);\n        if (!ids.has(aid)) combined.push(a);\n      });\n\n      combined.forEach((r) => {\n        const rid = Number(r.id);\n        const notification = this.notificationsMap.get(rid);\n        r.read_at = notification ? notification.read_at : null;\n      });\n\n      return combined;\n    },\n    organizationRecipients() {\n      const recipients = new Map();\n      const announcement = this.announcementEffective;\n      if (!announcement) return [];\n\n      (announcement.organizations || []).forEach((org) => {\n        const userId = org.user_id ?? org.user?.id ?? null;\n        const orgName = org.name ?? org.organization_name ?? '';\n        const email = org.contact_email ?? org.admin_email ?? null;\n        const first = org.user_first_name ?? org.user?.first_name ?? '';\n        const last = org.user_last_name ?? org.user?.last_name ?? '';\n\n        if (userId && !recipients.has(Number(userId))) {\n          recipients.set(Number(userId), {\n            id: Number(userId),\n            organization_name: orgName,\n            name: `${first || ''} ${last || ''}`.trim(),\n            email: email,\n          });\n        }\n      });\n\n      return Array.from(recipients.values());\n    },\n    adminRecipients() {\n      const recipients = new Map();\n      const announcement = this.announcementEffective;\n      if (!announcement) return [];\n\n      (announcement.admins || []).forEach((admin) => {\n        if (admin && admin.id && !recipients.has(admin.id)) {\n          recipients.set(admin.id, {\n            id: admin.id,\n            name:\n              admin.name ||\n              `${admin.first_name || ''} ${admin.last_name || ''}`.trim(),\n            email: admin.email,\n          });\n        }\n      });\n\n      return Array.from(recipients.values());\n    },\n    groupRows() {\n      if (Array.isArray(this.groups) && this.groups.length) {\n        return this.groups.map((g) => ({\n          id: g.id,\n          name: g.name || `Group ${g.id}`,\n          organization_id: g.organization_id || null,\n          organization_name: g.organization_name || '',\n          org_contact_email: g.org_contact_email || null,\n        }));\n      }\n\n      const announcement = this.announcementEffective || {};\n      const ag = announcement.groups || [];\n      const orgs = announcement.organizations || this.organizations || [];\n      const orgMap = new Map();\n      orgs.forEach((o) => orgMap.set(Number(o.id), o));\n\n      return ag.map((g) => {\n        return {\n          id: g.id,\n          name: g.name || `Group ${g.id}`,\n          organization_id: g.organization_id,\n          organization_name: g.organization_name,\n          org_contact_email: g.org_contact_email,\n        };\n      });\n    },\n  },\n  methods: {\n    formatDateTime(dt) {\n      if (!dt) return '—';\n      try {\n        const d = new Date(dt);\n        if (isNaN(d.getTime())) return dt;\n        const day = String(d.getDate()).padStart(2, '0');\n        const months = [\n          'Jan',\n          'Feb',\n          'Mar',\n          'Apr',\n          'May',\n          'Jun',\n          'Jul',\n          'Aug',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dec',\n        ];\n        const mon = months[d.getMonth()];\n        const yr = d.getFullYear();\n        let hr = d.getHours();\n        const min = String(d.getMinutes()).padStart(2, '0');\n        const ampm = hr >= 12 ? 'PM' : 'AM';\n        hr = hr % 12;\n        hr = hr || 12;\n        return `${day} ${mon},${yr} ${hr}:${min} ${ampm}`;\n      } catch {\n        return dt;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n@import '@/assets/modelcssnotificationandassesment.css';\n\n/* status badges */\n.schedule-header-right {\n  display: flex;\n  gap: 10px;\n  align-items: center;\n}\n\n.status-green {\n  color: #fff;\n  background: #28a745;\n  font-weight: 600;\n  font-size: 18px;\n  padding: 4px 16px;\n  border-radius: 20px;\n  display: inline-block;\n  min-width: 150px;\n  text-align: center;\n}\n\n.status-yellow {\n  color: #fff;\n  background: #f7c948;\n  font-weight: 600;\n  font-size: 18px;\n  padding: 4px 16px;\n  border-radius: 20px;\n  display: inline-block;\n  min-width: 150px;\n  text-align: center;\n}\n\n.status-red {\n  color: #fff;\n  background: #e74c3c;\n  font-weight: 600;\n  font-size: 18px;\n  padding: 4px 16px;\n  border-radius: 20px;\n  display: inline-block;\n  min-width: 150px;\n\n  text-align: center;\n}\n.status-green.active,\n.status-yellow.active,\n.status-red.active {\n  opacity: 1;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.06);\n}\n.modal-titleTABLE {\n  font-size: 16px;\n  font-weight: 400;\n  margin: 8px 0;\n  color: var(--text);\n  text-align: center;\n}\n</style>\n","import { render } from \"./NotificationDetail.vue?vue&type=template&id=9a5ca7b0&scoped=true\"\nimport script from \"./NotificationDetail.vue?vue&type=script&lang=js\"\nexport * from \"./NotificationDetail.vue?vue&type=script&lang=js\"\n\nimport \"./NotificationDetail.vue?vue&type=style&index=0&id=9a5ca7b0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-9a5ca7b0\"]])\n\nexport default __exports__","import { render } from \"./Notifications.vue?vue&type=template&id=daed55e4&scoped=true\"\nimport script from \"./Notifications.vue?vue&type=script&lang=js\"\nexport * from \"./Notifications.vue?vue&type=script&lang=js\"\n\nimport \"./Notifications.vue?vue&type=style&index=0&id=daed55e4&lang=css\"\nimport \"./Notifications.vue?vue&type=style&index=1&id=daed55e4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-daed55e4\"]])\n\nexport default __exports__"],"names":["class","_createBlock","_component_MainLayout","_createVNode","_component_Toast","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","$event","$data","showSendModal","src","_imports_0","alt","_hoisted_5","_hoisted_6","_component_TableHeader","columns","activeSortKey","sortKey","sortAsc","onSort","$options","sortBy","_createElementBlock","_Fragment","_renderList","paginatedNotifications","item","key","id","_hoisted_7","title","body","style","_hoisted_8","_toDisplayString","formatLocalDateTime","scheduled_at","sent_at","openDetail","_imports_1","length","_hoisted_10","colspan","_component_Pagination","pageSize","pageSizes","showPageDropdown","currentPage","totalPages","paginationPages","onGoToPage","goToPage","onSelectPageSize","selectPageSize","onTogglePageDropdown","_withModifiers","_hoisted_11","placeholder","_hoisted_12","_hoisted_13","_component_FormLabel","_component_MultiSelectDropdown","options","organizations","selectedItems","selectedOrganizations","enableSelectAll","_hoisted_14","groups","selectedGroups","_hoisted_15","_hoisted_16","admins","selectedAdmins","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_component_FormInput","scheduledDate","type","_hoisted_22","_hoisted_23","scheduledTime","args","sendNotification","_component_NotificationDetail","visible","showDetailModal","announcement","detailData","notifications","onClose","closeDetail","$props","_ctx","$emit","announcementBodyShort","formatDateTime","announcementScheduledAt","announcementStatus","_normalizeClass","allRecipients","_hoisted_9","r","organization_name","name","email","read_at","groupRows","g","org_contact_email","components","TableHeader","props","Boolean","default","Object","selectedNotification","Array","emits","data","computed","announcementEffective","this","raw","String","slice","a","hasSent","hasScheduled","notificationsMap","map","Map","forEach","n","notifiable_id","set","Number","orgs","organizationRecipients","adminRecipients","combined","ids","Set","o","aid","has","push","rid","notification","get","recipients","org","userId","user_id","user","orgName","contact_email","admin_email","first","user_first_name","first_name","last","user_last_name","last_name","trim","from","values","admin","isArray","organization_id","ag","orgMap","methods","dt","d","Date","isNaN","getTime","day","getDate","padStart","months","mon","getMonth","yr","getFullYear","hr","getHours","min","getMinutes","ampm","__exports__","MainLayout","Pagination","NotificationDetail","FormDropdown","FormRow","FormInput","FormLabel","FormDateTime","MultiSelectDropdown","Toast","isAlive","selectedAdmin","announcements","Math","ceil","sort","b","aVal","bVal","start","total","_","i","pages","max","console","error","$toast","add","severity","summary","detail","life","authToken","storage","res","axios","headers","Authorization","page","size","dateStr","test","m","match","year","parseInt","month","hour","minute","second","utcMillis","UTC","e","warn","dayOfMonth","strTime","fetchOrganizations","apiUrl","process","VUE_APP_API_URL","token","err","fetchGroups","fetchAdmins","fetchNotifications","time","local","pad","YYYY","getUTCFullYear","MM","getUTCMonth","DD","getUTCDate","hh","getUTCHours","mm","getUTCMinutes","ss","getUTCSeconds","payload","organization_ids","group_ids","group","admin_ids","$el","querySelector","value","post","resetForm","textarea","mounted","beforeUnmount","render"],"sourceRoot":""}